<html>
<head>

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">
<script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>
<link href="http://getbootstrap.com/examples/cover/cover.css" rel="stylesheet">
<script src="/js/async.js"></script>
<style>
body {
  background: url(assets/img/bg.jpg) no-repeat center center fixed;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  -o-background-size: cover;
  background-size: cover;
}
select {
  color: #333;
  overflow: scroll;
}
.lead {
  display: inline-block;
  vertical-align: top;
}
.chevrons {
  margin-top: 40px;
  width: 150px;
}

#status {
  font-size: 14px;
}
.cover-container {
  width: 100%;
}
.mastfoot {
  width: 100%;
}
select {
  min-width: 280px;
}
</style>
</head>
<body>

<div class="site-wrapper">

  <div class="site-wrapper-inner">

    <div class="cover-container">

      <!--
      <div class="masthead clearfix">
        <div class="inner">
          <h3 class="masthead-brand">anam</h3>
        </div>
      </div>
      -->

      <div class="inner cover">
        <div class="lead inputs">
        <select multiple id="repoin" class="input-lg">
        <% for repo in repos do %>
          <option value="<%= login + '/' +repo.name %>"><%= repo.name %></option>
        <% end %>
        </select>

        <br>
        <br>
        <button class="btn btn-primary" id="repob">Backup!</button>
        </div>

        <div class="lead chevrons">
        <span class="glyphicon glyphicon-chevron-right"></span>
        <span class="glyphicon glyphicon-chevron-right"></span>
        <span class="glyphicon glyphicon-chevron-right"></span>
        <p id="status">
          Start a backup!
        </p>
        </div>
        <div class="lead inputs">
          <select multiple id="backupin" class="input-lg" >
        <% for backup in backups do %>
          <option value="<%=backup.external_id%>"><%= backup.repo_target.sub login+'/', '' %></option>
        <% end %>
        </select>

        <br>
        <br>
        <button class="btn btn-success" id="backup_download">Download</button>
        <!--<button class="btn btn-warning" id="backup_deactivate">Deactivate</button>-->
        <button class="btn btn-danger" id="backup_delete">Delete</button>

        </div>
        
        


        
        <script type="text/javascript">
        fun_status_lines = ["Checking my portfolio...", "Doing my taxes...", "Calling my doctor...", "Waiting for Episode VII...", "Playing 2048..."];


        $('#backupin').css('width', $('#repoin').outerWidth());
        // hacky af
        $('.inputs').css('width', $('#repoin').outerWidth());

        // this is a multiple select now, so it needs to loop and call the api multiple times
        $('#repob').click(function(){
          $('#repob').prop('disabled', 'true'); 
          var selected = $('#repoin').val()

          var backup_funcs = [];

          for(var i in selected){
            var repo = selected[i]

            backup_funcs.push(backup_func_generator(repo));
          }
          async.parallel.apply(null, [backup_funcs]);

        });

        $('#backup_download').click(function(){
          var selected = $('#backupin').val()

          for(var i in selected){
            var repo = selected[i];
            // triggers the popup blocker (also opens in a new window. fix this?)
            window.open('/webhooks/download/'+repo,'_blank');
          }
        });

        $('#backup_delete').click(function(){
          var selected = $('#backupin').val()

          for(var i in selected){
            var repo = selected[i];
            $('#backupin').fadeOut('slow');
            $.ajax({
              url: '/webhooks/delete/'+repo,
              type: 'POST'
            })
            .complete(function(j, status){
              $('#backupin').fadeIn('slow');
              if(j.status == 200){
                $('option[value="' + repo+'"]').remove();
              }
            });
          }
        });
    
        function backup_func_generator(repo_name){
          return function(){
            console.log('creating bacup');
            $('#status').text('Creating a webhook...');
               $.ajax({
                url: '/webhooks/new?repo_target='+repo_name,
                type: 'POST'})
              .complete(function(j, status){
                  $('#status').text('Kicking off a backup...');
                  // the webhook has been created
                  if(j.status == 201){
                    // now let's kick off a backup!
                    var backup = j.responseJSON;
                    startFlavorTexting();
                    $.ajax({
                      url: '/webhooks/'+backup.external_id,
                      type: 'POST'
                    })
                    .complete(function(k, status){
                      if(k.status == 201){
                        $('#repoin').fadeOut('slow', function(){
                          $('option[value="' + repo_name +'"]').remove();
                          $('#repoin').fadeIn('slow');

                          $('#backupin').fadeOut('slow', function(){
                            $('#backupin').append($('<option>' + backup.repo_target.replace('<%= login %>/', '')+ '</option>').val(backup.external_id));
                            $('#backupin').fadeIn('slow');  
                          })
                          stopFlavorTexting();
                        });
                      }
                    });
                  }
              });
            }
          }
          function updateStatus(){
            $('#status').text(fun_status_lines[Math.floor(Math.random()*fun_status_lines.length)]);
          }

          var running = 0;
          var interval;
          function startFlavorTexting() {
            if(running == 0){
              interval = setInterval(updateStatus, 1500);
            }
            running++;
          }
          function stopFlavorTexting(){
           running--;
            if(running == 0){
              clearInterval(interval);
              $('#status').text('Start a backup!');
              $('#repob').prop('disabled', '');
            }
          }
          
         
        </script>
        </p>
      </div>

      <div class="mastfoot">
        <div class="inner">
          <small>
           <p>Built by Andrew Nissen (<a href="http://twitter.com/ambushsabre">@ambushsabre</a>) and Aaron Hammond (<a href="http://twitter.com/kanaborama">@kanaborama</a>). Shoot us an email: <a href="mailto:anamnesis@mit.edu?Subject=You%20rock!" target="_top">anamnesis@mit.edu</a></p>
         </small>
        </div>
      </div>

    </div>

  </div>

</div>
</body>
</html>
